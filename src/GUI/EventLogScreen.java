/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import esperdemonstrations.CEPHandler;
import java.util.LinkedList;

/**
 *
 * @author fbeneditovm
 */
public class EventLogScreen extends javax.swing.JFrame {
    CEPHandler handler;
    LinkedList<String> inEvents;
    LinkedList<String> rmEvents;
    boolean filterEvents;
    
    /**
     * Creates new form EventLogScreen
     */
    public EventLogScreen(CEPHandler handler) {
        this.handler = handler;
        inEvents = new LinkedList<>();
        rmEvents = new LinkedList<>();
        filterEvents = false;
        initComponents();
    }
    
    public EventLogScreen(){
        this.handler = null;
        inEvents = new LinkedList<>();
        rmEvents = new LinkedList<>();
        filterEvents = false;
        initComponents();
    }
    
    /*
    public void addInStreamEvent(String event){
        inEvents.removeFirst();
        inEvents.add(event);
        String[] data = inEvents.toArray(new String[inEvents.size()]);
        insertList.setListData(data);
    }
    
    public void addRmStreamEvent(String event){
        rmEvents.removeFirst();
        rmEvents.add(event);
        String[] data = rmEvents.toArray(new String[rmEvents.size()]);
        removeList.setListData(data);
    }
    
    public void newRmStreamBatch(String[] batch){
        removeList.setListData(batch);
    }
    */
    
    public void newEvents(LinkedList<String> inEvents, LinkedList<String> rmEvents){
        this.inEvents.addAll(inEvents);
        this.rmEvents.addAll(rmEvents);
        updateLog();
    }
    
    public void updateLog(){
        String[] data1 = inEvents.toArray(new String[inEvents.size()]);
        insertList.setListData(data1);
        String[] data2 = rmEvents.toArray(new String[rmEvents.size()]);
        removeList.setListData(data2);
    }
    
    private void clearEvents(){
        inEvents = new LinkedList<String>();
        rmEvents = new LinkedList<String>();
        updateLog();
        
        //Get the events by batch
        if (showbyBatchToggle.isSelected()){
            //Add a filter or where clause
            if(filterEvents){
                String condition = conditionField.getText();
                //If filter is selected in the combo box
                if(comboBox.getSelectedIndex()==0)
                    handler.getByBatchFilter(condition);
                else
                    handler.getByBatchWhere(condition);
            }                
            else{
                handler.getByBatchNoFilter();
            }
        }
        //Get the events by window
        else{
            //Add a filter or where clause
            if(filterEvents){
                String condition = conditionField.getText();
                //If filter is selected in the combo box
                if(comboBox.getSelectedIndex()==0)
                    handler.getByWindowFilter(condition);
                else
                    handler.getByWindowWhere(condition);
            }
            else{
                handler.getByWindowNoFilter();
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        showbyBatchToggle = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        insertList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        removeList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        conditionField = new javax.swing.JTextField();
        btAddFilter = new javax.swing.JButton();
        btRemoveFilter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabel1.setText("Last Events:");

        showbyBatchToggle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        showbyBatchToggle.setText("Show By Batch");
        showbyBatchToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showbyBatchToggleActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(insertList);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Insert Stream:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Remove Stream:");

        jScrollPane2.setViewportView(removeList);

        jLabel4.setText("Add a Filter or where clause:");

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter", "Where Clause" }));

        conditionField.setText("Type filter or where clause");
        conditionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                conditionFieldFocusGained(evt);
            }
        });

        btAddFilter.setText("Add");
        btAddFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddFilterActionPerformed(evt);
            }
        });

        btRemoveFilter.setText("Remove");
        btRemoveFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(showbyBatchToggle))
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(conditionField, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAddFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btRemoveFilter)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(showbyBatchToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conditionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAddFilter)
                    .addComponent(btRemoveFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showbyBatchToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showbyBatchToggleActionPerformed
        clearEvents();
    }//GEN-LAST:event_showbyBatchToggleActionPerformed

    private void btAddFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddFilterActionPerformed
        filterEvents = true;
        clearEvents();
    }//GEN-LAST:event_btAddFilterActionPerformed

    private void btRemoveFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveFilterActionPerformed
        filterEvents = false;
        clearEvents();
    }//GEN-LAST:event_btRemoveFilterActionPerformed

    private void conditionFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_conditionFieldFocusGained
        conditionField.selectAll();
    }//GEN-LAST:event_conditionFieldFocusGained
    public boolean isShowbyBatch(){
        return showbyBatchToggle.isSelected();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventLogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventLogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventLogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventLogScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventLogScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddFilter;
    private javax.swing.JButton btRemoveFilter;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JTextField conditionField;
    private javax.swing.JList<String> insertList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> removeList;
    private javax.swing.JToggleButton showbyBatchToggle;
    // End of variables declaration//GEN-END:variables
}
